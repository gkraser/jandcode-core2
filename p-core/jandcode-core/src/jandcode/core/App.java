package jandcode.core;

import jandcode.commons.conf.*;
import jandcode.commons.env.*;

/**
 * Приложение.
 * Конфигурация приложения доступна через метод {@link IConfLink#getConf()}.
 */
public interface App extends IConfLink, BeanFactoryOwner {

    /**
     * Модули приложения
     */
    ModuleHolder getModules();

    /**
     * Каталог приложения (где приложение установлено).
     */
    String getAppdir();

    /**
     * Рабочий каталог (где приложение запущено).
     */
    String getWorkdir();

    /**
     * Имя файла, откуда было загружено приложение
     */
    String getAppConfFile();

    /**
     * Имя приложения.
     * Это идентификатор приложения, не заголовок.
     * По умолчанию - имя каталога приложения.
     * Используется как ключ в случае необходимости идентификации приложения.
     */
    String getAppName();

    /**
     * Среда работы приложение (dev/prod/test).
     */
    Env getEnv();

    /**
     * Запуск приложения.
     * <p>
     * Для реакции на вызов этого метода сервис приложения должен
     * реализовать интерфейс {@link IAppStartup}.
     * <p>
     * Вызывается в приложении (например в сервлете). В тестах и в утилите jc
     * не вызывается. Метод срабатывает только раз. Вызовы startup/shutdown
     * должны быть сбалансированы.
     */
    void startup();

    /**
     * Остановка приложения.
     * <p>
     * Для реакции на вызов этого метода сервис приложения должен
     * реализовать интерфейс {@link IAppShutdown}.
     * <p>
     * Вызывается в приложении (например в сервлете). В тестах и в утилите jc
     * не вызывается. Метод срабатывает только раз. Вызовы startup/shutdown
     * должны быть сбалансированы.
     */
    void shutdown();


}
