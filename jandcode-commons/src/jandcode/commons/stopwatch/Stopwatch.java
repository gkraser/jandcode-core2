package jandcode.commons.stopwatch;

import jandcode.commons.named.*;

/**
 * Секундомер.
 * <p>
 * У секундомера имеется счетчик - количество условных операция, которые были выполнены
 * пока секундомер работал. Используется для определения значения "количество операций
 * в секунду".
 */
public interface Stopwatch extends INamed {

    /**
     * Запустить секундомер.
     */
    void start();

    /**
     * Остановить секундомер.
     */
    void stop();

    /**
     * Приостановить работу секундомера.
     * Если не стартован, вызов игнорируется.
     */
    void pause();

    /**
     * Продолжить работу секундомера.
     * Если не стартован, стартует.
     */
    void resume();

    /**
     * Состояние секундомера
     */
    StopwatchState getState();

    /**
     * Остановить секундомер с одновременным присваиванием счетчика.
     * Эквивалентно: <code>setCounter(n);stop();</code>
     */
    default void stop(long counter) {
        setCounter(counter);
        stop();
    }

    /**
     * Сколько милисекунд работал секундомер.
     * Если в момент вызова секундомер запущен, то возвращает текущее состояние.
     */
    long getTime();

    /**
     * Счетчик.
     */
    long getCounter();

    /**
     * Установить счетчик. Устанавливать счетчик нужно до остановки секундомера.
     */
    void setCounter(long counter);

    /**
     * Увеличить значение счетчика на указанное значение
     */
    void incCounter(long v);

    /**
     * Установить произвольный форматтер для перевода секундомера в строку
     * методом toString().
     */
    void setFormatter(StopwatchFormatter formatter);

}
